@startuml

box "Host"
box "Container 1"
    participant "Txgen"
    note left of Txgen #aqua
     Txgen using AF_XDP
     in Native mode
    end note
    participant "veth2"
end box
participant "net/xdp/xsk.c"
participant "net/core/dev.c"
participant "include/linux/netdevice.h"
participant "veth1"
note left of veth1 #aqua
     veth1 xdp redirect
     program attached
    end note
participant "net/core/filter.c"
participant "net/core/filter.h"
participant "net/core/xdp.c"
participant "net/core/gro.h"
participant "net/core/gro.c"
participant "veth3"
note right of veth3 #aqua
     veth3 xdp pass
     program attached
    end note
box "Container 2"
    participant "veth4"
    participant "cnet-graph"
end box
endbox

autonumber
Txgen -> "net/xdp/xsk.c" : send buffer ()
note left
xsk_ring_prod__reserve()
xsk_ring_prod__submit ()
sendto(xsk_socket__fd(xsk), ... MSG_DONTWAIT,...))
end note

activate "net/xdp/xsk.c"
"net/xdp/xsk.c"->"net/xdp/xsk.c": xsk_sendmsg()
activate "net/xdp/xsk.c"
"net/xdp/xsk.c"->"net/xdp/xsk.c": __xsk_sendmsg()
activate "net/xdp/xsk.c"
"net/xdp/xsk.c"->"net/xdp/xsk.c": xsk_xmit()
"net/xdp/xsk.c"-[#red]>"net/xdp/xsk.c": <font color=red> <b>xsk_generic_xmit()
"net/xdp/xsk.c"-[#red]>"net/xdp/xsk.c": <font color=red> <b>xsk_build_skb()
"net/xdp/xsk.c"->"net/core/dev.c":__dev_direct_xmit()
activate "net/core/dev.c"
"net/core/dev.c" -> "include/linux/netdevice.h": netdev_start_xmit()
activate "include/linux/netdevice.h"
"include/linux/netdevice.h" -> "include/linux/netdevice.h": __netdev_start_xmit()
"include/linux/netdevice.h"-> veth2: ops->ndo_start_xmit()
deactivate "include/linux/netdevice.h"
deactivate "net/xdp/xsk.c"
deactivate "net/xdp/xsk.c"
deactivate "net/xdp/xsk.c"

activate veth2
veth2 -> veth2: veth_xmit()
activate veth2
veth2 -> veth2: veth_skb_is_eligible_for_gro()
veth2 -> veth2: veth_forward_skb()
veth2 -> "net/core/dev.c": __dev_forward_skb()
activate "net/core/dev.c"
"net/core/dev.c" -> "net/core/dev.c":  __dev_forward_skb2()
"net/core/dev.c" -> "include/linux/netdevice.h": ____dev_forward_skb
activate "include/linux/netdevice.h"
"include/linux/netdevice.h" -->"net/core/dev.c": return
deactivate "include/linux/netdevice.h"
"net/core/dev.c" --> veth2: return
deactivate "net/core/dev.c"
veth2 -> "net/core/dev.c": __netif_rx()
"net/core/dev.c"-> "net/core/dev.c": netif_rx_internal()
"net/core/dev.c"-> "net/core/dev.c": enqueue_to_backlog()
note right
eventually NAPI fires for the target netdev "veth1" and calls do_xdp_generic()
as a redirect program is attached to "veth1"
end note

rnote over veth1 #orange
interrupt
endrnote
activate veth1
"net/core/dev.c"-> veth1: Interrupt fires
"net/core/dev.c"-> "net/core/dev.c": __netif_receive_skb()
"net/core/dev.c"-> "net/core/dev.c": __netif_receive_skb_one_core()
"net/core/dev.c"-> "net/core/dev.c": do_xdp_generic()
"net/core/dev.c" -> "net/core/filter.c": xdp_do_generic_redirect()
deactivate "net/core/dev.c"
activate "net/core/filter.c"
"net/core/filter.c" -> "net/core/filter.c": xdp_do_generic_redirect_map()
note right
calls dev_map_generic_redirect and redirects the skb to the target netdev
end note
deactivate "net/core/filter.c"


activate veth3
veth3 -> veth3: veth_xmit()
activate veth3
veth3 -> veth3: veth_skb_is_eligible_for_gro()
veth3 -> veth3: veth_forward_skb()
veth3 -> "net/core/dev.c": __dev_forward_skb()
activate "net/core/dev.c"
"net/core/dev.c" -> "net/core/dev.c":  __dev_forward_skb2()
"net/core/dev.c" -> "include/linux/netdevice.h": ____dev_forward_skb
activate "include/linux/netdevice.h"
"include/linux/netdevice.h" -->"net/core/dev.c": return
deactivate "include/linux/netdevice.h"
"net/core/dev.c" --> veth3: return
deactivate "net/core/dev.c"
deactivate "net/core/dev.c"

veth3 -> veth3: veth_xdp_rx()
veth3 -> veth3: ptr_ring_produce()
note left
 queue the skb to the shared ring with veth4
end note
veth3 -> veth3: __veth_xdp_flush()
deactivate veth3
deactivate veth3

rnote over veth4 #orange
interrupt
endrnote
activate veth4
veth4 -> veth4: veth_poll()
activate veth4
veth4 -> veth4: veth_xdp_rcv()
veth4 -> veth4: veth_is_xdp_frame()
veth4 -> veth4: veth_ptr_to_xdp()
note right
veth_is_xdp_frame
end note
veth4 -> veth4: veth_xdp_rcv_one()
veth4 -> veth4: veth_xdp_rcv_bulk_skb()
veth4 -[#purple]> veth4: <font color=purple> <b> xdp_alloc_skb_bulk
veth4 -[#purple]> "net/core/xdp.c":  <font color=purple> <b>__xdp_build_skb_from_frame()
veth4 -> veth4: veth_xdp_rcv_bulk_skb()
veth4 ->"net/core/gro.c": napi_gro_receive()
deactivate veth4
deactivate veth4
"net/core/gro.c" -> "net/core/gro.c": napi_skb_finish(napi, skb, <b>dev_gro_receive(napi, skb));
note right
napi_skb_finish eventually calls netif_receive_skb_list_internal()
end note
"net/core/gro.h" -> "net/core/dev.c": netif_receive_skb_list_internal()
activate "net/core/dev.c"
"net/core/dev.c" -> "net/core/dev.c": __netif_receive_skb_list()
"net/core/dev.c" -> "net/core/dev.c": __netif_receive_skb_list_core()
"net/core/dev.c" -> "net/core/dev.c": __netif_receive_skb_core()
"net/core/dev.c" -> "net/core/dev.c": do_xdp_generic()
"net/core/dev.c" -> "net/core/filter.c": xdp_do_generic_redirect()
deactivate "net/core/dev.c"
activate "net/core/filter.c"
"net/core/filter.c" -> "net/core/filter.c": xdp_do_generic_redirect_map()
note right
calls dev_map_generic_redirect and redirects the skb to the af_xdp socket
end note
deactivate "net/core/filter.c"

activate "net/xdp/xsk.c"
"net/xdp/xsk.c" -> "net/xdp/xsk.c": xsk_generic_rcv()
"net/xdp/xsk.c" -> "net/xdp/xsk.c": xsk_rcv_check()
"net/xdp/xsk.c" -> "net/xdp/xsk.c": __xsk_rcv()
"net/xdp/xsk.c" -> "net/xdp/xsk.c": xsk_copy_xdp()
"net/xdp/xsk.c" -> "net/xdp/xsk.c": __xsk_rcv_zc()
"net/xdp/xsk.c" -> "net/xdp/xsk.c": xsk_flush()
autonumber stop
@enduml